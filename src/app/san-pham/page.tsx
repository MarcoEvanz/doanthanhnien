'use client';

import { useState } from 'react';
import Link from 'next/link';
import Image from 'next/image';


const categories = [
  { id: 'all', name: 'T·∫•t c·∫£', icon: 'üåü' },
  { id: 'nong-san', name: 'N√¥ng s·∫£n', icon: 'üåæ' },
  { id: 'thu-cong', name: 'Th·ªß c√¥ng m·ªπ ngh·ªá', icon: 'üé®' },
  { id: 'dac-san', name: 'ƒê·∫∑c s·∫£n', icon: 'üèÜ' },
  { id: 'dich-vu', name: 'D·ªãch v·ª•', icon: 'üõéÔ∏è' },
];

const products = [
  {
    id: 1,
    name: 'G·∫°o th∆°m ƒë·∫∑c s·∫£n',
    category: 'nong-san',
    price: 150000,
    unit: 'kg',
    image: '/images/products/nong-san/gaothomdacsan.png',
    description: 'G·∫°o th∆°m s·∫°ch t·ª´ ru·ªông l√∫a ƒë·ªãa ph∆∞∆°ng, h·∫°t d·∫ªo th∆°m',
    inStock: true,
    supplier: 'H·ª£p t√°c x√£ Th√†nh ph√∫',
  },
  {
    id: 2,
    name: 'Rau s·∫°ch h·ªØu c∆°',
    category: 'nong-san',
    price: 50000,
    unit: 'kg',
    image: '/images/products/nong-san/rausachhuuco.png',
    description: 'Rau xanh s·∫°ch kh√¥ng h√≥a ch·∫•t, t∆∞∆°i ngon m·ªói ng√†y',
    inStock: true,
    supplier: 'Nh√≥m n√¥ng d√¢n tr·∫ª',
  },
  {
    id: 3,
    name: 'Th√∫ng tre ƒëan tay',
    category: 'thu-cong',
    price: 200000,
    unit: 'c√°i',
    image: '/images/products/thu-cong-my-nghe/thungtredantay.png',
    description: 'S·∫£n ph·∫©m th·ªß c√¥ng t·ª´ tre n·ª©a, ƒëan tay t·ªâ m·ªâ',
    inStock: true,
    supplier: 'X∆∞·ªüng th·ªß c√¥ng Thanh Nga',
  },
  {
    id: 4,
    name: 'B√°nh tr√°ng n∆∞·ªõng',
    category: 'dac-san',
    price: 80000,
    unit: 'kg',
    image: '/images/products/dac-san/banhtrangnuong.png',
    description: 'B√°nh tr√°ng truy·ªÅn th·ªëng l√†m th·ªß c√¥ng, th∆°m ngon',
    inStock: true,
    supplier: 'C∆° s·ªü Minh H·∫°nh',
  },
  {
    id: 5,
    name: 'M·∫≠t ong nguy√™n ch·∫•t',
    category: 'dac-san',
    price: 300000,
    unit: 'l√≠t',
    image: '/images/products/dac-san/matongnguyenchat.png',
    description: 'M·∫≠t ong r·ª´ng nguy√™n ch·∫•t, b·ªï d∆∞·ª°ng cao',
    inStock: true,
    supplier: 'Tr·∫°i ong Minh ƒê·ª©c',
  },
  {
    id: 6,
    name: 'Tour tham quan n√¥ng tr·∫°i',
    category: 'dich-vu',
    price: 150000,
    unit: 'ng∆∞·ªùi',
    image: '/images/products/dich-vu/tourthamquannongtrai.png',
    description: 'Tr·∫£i nghi·ªám cu·ªôc s·ªëng n√¥ng th√¥n, tham quan v∆∞·ªùn rau',
    inStock: true,
    supplier: 'N√¥ng tr·∫°i sinh th√°i Xanh',
  },
];

export default function SanPham() {
  const [selectedCategory, setSelectedCategory] = useState('all');
  const [searchTerm, setSearchTerm] = useState('');
  const [sortBy, setSortBy] = useState('name');

  const filteredProducts = products
    .filter(product => 
      (selectedCategory === 'all' || product.category === selectedCategory) &&
      product.name.toLowerCase().includes(searchTerm.toLowerCase())
    )
    .sort((a, b) => {
      if (sortBy === 'name') return a.name.localeCompare(b.name);
      if (sortBy === 'price-asc') return a.price - b.price;
      if (sortBy === 'price-desc') return b.price - a.price;
      return 0;
    });

  return (
    <div className="min-h-screen flex flex-col">
      <main className="flex-1">
        {/* Hero Section */}
        <section className="bg-gradient-to-r from-green-600 to-blue-600 text-white py-16">
          <div className="container mx-auto px-4 text-center">
            <h1 className="text-4xl md:text-5xl font-bold mb-4">
              S·∫£n ph·∫©m ƒë·ªãa ph∆∞∆°ng Th√†nh ph√∫
            </h1>
            <p className="text-xl mb-8">
              Kh√°m ph√° nh·ªØng s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng t·ª´ b√† con n√¥ng d√¢n
            </p>
          </div>
        </section>

        {/* Filters & Search */}
        <section className="py-8 bg-white border-b">
          <div className="container mx-auto px-4">
            <div className="flex flex-col md:flex-row gap-4 items-center justify-between">
              {/* Search */}
              <div className="w-full md:w-96">
                <div className="relative">
                  <input
                    type="text"
                    placeholder="T√¨m ki·∫øm s·∫£n ph·∫©m..."
                    className="w-full px-4 py-2 pr-10 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                    value={searchTerm}
                    onChange={(e) => setSearchTerm(e.target.value)}
                  />
                  <span className="absolute right-3 top-2.5 text-gray-400">üîç</span>
                </div>
              </div>

              {/* Sort */}
              <div className="flex gap-4">
                <select
                  className="px-4 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500"
                  value={sortBy}
                  onChange={(e) => setSortBy(e.target.value)}
                >
                  <option value="name">S·∫Øp x·∫øp theo t√™n</option>
                  <option value="price-asc">Gi√° th·∫•p ƒë·∫øn cao</option>
                  <option value="price-desc">Gi√° cao ƒë·∫øn th·∫•p</option>
                </select>
              </div>
            </div>

            {/* Categories */}
            <div className="mt-6">
              <div className="flex flex-wrap gap-2">
                {categories.map((category) => (
                  <button
                    key={category.id}
                    onClick={() => setSelectedCategory(category.id)}
                    className={`px-4 py-2 rounded-full text-sm font-medium transition-colors ${
                      selectedCategory === category.id
                        ? 'bg-blue-600 text-white'
                        : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                    }`}
                  >
                    <span className="mr-2">{category.icon}</span>
                    {category.name}
                  </button>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Products Grid */}
        <section className="py-12">
          <div className="container mx-auto px-4">
            <div className="mb-6 flex justify-between items-center">
              <h2 className="text-2xl font-bold text-gray-800">
                {selectedCategory === 'all' ? 'T·∫•t c·∫£ s·∫£n ph·∫©m' : categories.find(c => c.id === selectedCategory)?.name}
              </h2>
              <span className="text-gray-600">
                T√¨m th·∫•y {filteredProducts.length} s·∫£n ph·∫©m
              </span>
            </div>

            {filteredProducts.length === 0 ? (
              <div className="text-center py-12">
                <span className="text-4xl mb-4 block">üòî</span>
                <h3 className="text-xl font-semibold text-gray-600 mb-2">
                  Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m
                </h3>
                <p className="text-gray-500">
                  H√£y th·ª≠ t√¨m ki·∫øm v·ªõi t·ª´ kh√≥a kh√°c ho·∫∑c ch·ªçn danh m·ª•c kh√°c
                </p>
              </div>
            ) : (
              <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
                {filteredProducts.map((product) => (
                  <div key={product.id} className="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                    <div className="h-48 bg-gray-200 flex items-center justify-center relative">
                      <Image
                        src={product.image}
                        alt={product.name}
                        fill
                        className="object-cover"
                      />
                      {!product.inStock && (
                        <div className="absolute inset-0 bg-black bg-opacity-50 flex items-center justify-center">
                          <span className="text-white font-semibold">H·∫øt h√†ng</span>
                        </div>
                      )}
                    </div>
                    <div className="p-4">
                      <div className="flex items-center mb-2">
                        <span className="text-xs px-2 py-1 bg-blue-100 text-blue-600 rounded-full">
                          {categories.find(c => c.id === product.category)?.name}
                        </span>
                        <span className={`ml-auto text-xs px-2 py-1 rounded-full ${
                          product.inStock 
                            ? 'bg-green-100 text-green-600' 
                            : 'bg-red-100 text-red-600'
                        }`}>
                          {product.inStock ? 'C√≤n h√†ng' : 'H·∫øt h√†ng'}
                        </span>
                      </div>
                      <h3 className="font-semibold text-lg mb-2 line-clamp-2">{product.name}</h3>
                      <p className="text-gray-600 text-sm mb-3 line-clamp-2">{product.description}</p>
                      <div className="text-sm text-gray-500 mb-3">
                        Nh√† cung c·∫•p: {product.supplier}
                      </div>
                      <div className="flex justify-between items-center">
                        <div>
                          <span className="text-blue-600 font-bold text-lg">
                            {product.price.toLocaleString('vi-VN')}‚Ç´
                          </span>
                          <span className="text-gray-500 text-sm">/{product.unit}</span>
                        </div>
                        <div className="flex gap-2">
                          <Link 
                            href={`/san-pham/${product.id}`}
                            className="px-3 py-1 text-sm border border-blue-600 text-blue-600 rounded hover:bg-blue-50 transition-colors"
                          >
                            Chi ti·∫øt
                          </Link>
                          <button 
                            className={`px-3 py-1 text-sm rounded transition-colors ${
                              product.inStock 
                                ? 'bg-blue-600 text-white hover:bg-blue-700' 
                                : 'bg-gray-300 text-gray-500 cursor-not-allowed'
                            }`}
                            disabled={!product.inStock}
                          >
                            {product.inStock ? 'Mua ngay' : 'H·∫øt h√†ng'}
                          </button>
                        </div>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
            )}
          </div>
        </section>

        {/* Call to Action */}
        <section className="py-16 bg-blue-50">
          <div className="container mx-auto px-4 text-center">
            <h2 className="text-3xl font-bold text-gray-800 mb-4">
              Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m mong mu·ªën?
            </h2>
            <p className="text-gray-600 mb-8">
              Li√™n h·ªá v·ªõi ch√∫ng t√¥i ƒë·ªÉ ƒë∆∞·ª£c t∆∞ v·∫•n v√† h·ªó tr·ª£ t√¨m ki·∫øm s·∫£n ph·∫©m ph√π h·ª£p
            </p>
            <Link 
              href="/lien-he"
              className="bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors inline-block"
            >
              Li√™n h·ªá ngay
            </Link>
          </div>
        </section>
      </main>
    </div>
  );
}
